[gd_resource type="ShaderMaterial" load_steps=7 format=2]

[ext_resource path="res://Shaders/Texturas/corona_Normal.png" type="Texture" id=1]
[ext_resource path="res://Shaders/Texturas/corona.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeColorFunc" id=4]

[sub_resource type="VisualShader" id=5]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// ColorFunc:4
	vec3 n_out4p0;
	{
		vec3 c = n_out3p0;
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		float max3 = max(max1, max2);
		n_out4p0 = vec3(max3, max3, max3);
	}

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out3p0;
	ROUGHNESS = dot(n_out4p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -275.417, -50.7083 )
nodes/fragment/0/position = Vector2( 580, 40 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( 280, 340 )
nodes/fragment/3/node = SubResource( 3 )
nodes/fragment/3/position = Vector2( 40, 40 )
nodes/fragment/4/node = SubResource( 4 )
nodes/fragment/4/position = Vector2( 280, 260 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 0, 3, 0, 4, 0, 4, 0, 0, 3, 2, 0, 0, 8 )

[resource]
shader = SubResource( 5 )
